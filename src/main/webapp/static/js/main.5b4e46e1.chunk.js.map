{"version":3,"sources":["components/Heading.js","components/main/Logout.js","components/main/Form.js","components/main/Table.js","components/main/Graph.js","components/main/Mainpage.js","components/login/Login.js","components/login/Loginpage.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Heading","style","fontFamily","fontWeight","fontSize","textDecoration","color","backgroundColor","align","id","Logout","type","onClick","e","console","log","CoordinatesForm","props","value","x_form","onValueChange","setX","mode","min","max","minFractionDigits","maxFractionDigits","placeholder","y_form","setY","r_form","validate","icon","Resulttable","checks","header","field","Graph","Mainpage","checkNumbers","q","a","b","useState","setR","Login","username","setUsername","password","setPassword","className","onChange","target","information","body","inf","push","join","fetch","method","then","response","text","statusText","ok","json","error","Loginpage","App","backgroundImage","backgroundSize","backgroundRepeat","initialState","token","localStorage","getItem","store","createStore","state","action","setItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b4e46e1.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Heading() {\n    const styles = {\n        h2: {\n            fontFamily: \"monospace\",\n            fontWeight: \"bolder\",\n            fontSize: \"250%\",\n            textDecoration: \"underline overline\",\n            color: \"#A35CFF\",\n            backgroundColor: \"#F3FFE1\"\n        }\n    }\n    return (\n        <h2 style={styles.h2} align=\"center\" id=\"authors\">Mike Lavlinskiy and Olga Ilinskaya production, var. 67125, P3214</h2>\n    )\n}","import React from \"react\";\n\nfunction Logout() {\n    const logout = e => {\n        //TODO\n        console.log(\"бабалити\");\n    }\n    return (<div>\n            <button type=\"button\" onClick={logout}>logout</button>\n        </div>\n    )\n}\nexport default Logout","import React from \"react\";\nimport {InputNumber} from 'primereact/inputnumber';\nimport {Button} from \"primereact/button\";\n\nfunction CoordinatesForm(props) {\n    const submit = () => {\n        if (props.validate()) {\n            //TODO\n        }\n    }\n\n    return (\n        <div>\n            <form>\n                <InputNumber value={props.x_form} onValueChange={(e) => props.setX(e.value)} mode=\"decimal\"\n                             min={-3} max={3}\n                             minFractionDigits={1} maxFractionDigits={5} placeholder=\"Введите X(-3 .. 3)\"/>\n                <InputNumber value={props.y_form} onValueChange={(e) => props.setY(e.value)} mode=\"decimal\"\n                             min={-3} max={3}\n                             minFractionDigits={1} maxFractionDigits={5} placeholder=\"Введите Y(-3 .. 3)\"/>\n                <InputNumber value={props.r_form} onValueChange={(e) => props.setY(e.value)} mode=\"decimal\"\n                             min={0} max={3}\n                             minFractionDigits={1} maxFractionDigits={5} placeholder=\"Введите R(0 .. 3)\"/>\n                <Button type=\"button\" onClick={submit} icon=\"pi\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default CoordinatesForm","import React from \"react\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\n\nfunction Resulttable(props) {\n    return (\n        <DataTable value={props.checks}>\n            <Column header=\"X\" field=\"x\"/>\n            <Column header=\"Y\" field=\"y\"/>\n            <Column header=\"R\" field=\"y\"/>\n            <Column header=\"Hit or miss?\" field=\"result\"/>\n        </DataTable>\n    )\n}\n\nexport default Resulttable;","import React from \"react\";\n\nfunction Graph(props) {\n    return (\n        <div>\n            ну это кароче канвас =)))\n        </div>\n    )\n}\n\nexport default Graph;","import React, {useState} from \"react\";\nimport Logout from \"./Logout\";\nimport CoordinatesForm from \"./Form\";\nimport Resulttable from \"./Table\";\nimport Graph from \"./Graph\";\n\nfunction Mainpage() {\n    const checkNumbers = (q, a, b) => {\n        return ((q > a) && (q < b));\n    }\n    const validate = () => {\n        return (checkNumbers(x_form, -3, 3) && checkNumbers(y_form, -3, 3) && checkNumbers(r_form, 0, 3));\n    }\n    const [x_form, setX] = useState('0');\n    const [y_form, setY] = useState('0');\n    const [r_form, setR] = useState('1');\n    const [checks, setChecks] = useState(null);\n    return (<div>\n        <Logout/>\n        <CoordinatesForm validate={validate} x_form={x_form} y_form={y_form} r_form={r_form} setX={setX} setY={setY}\n                         setR={setR}/>\n        <Resulttable checks={checks}/>\n        <Graph/>\n    </div>)\n}\n\nexport default Mainpage","import React, {useState} from \"react\";\nimport {InputText} from 'primereact/inputtext';\nimport {Password} from 'primereact/password';\nimport {Button} from \"primereact/button\";\nimport {Messages} from \"primereact/messages\";\nimport Loginpage from \"./Loginpage\";\nimport Mainpage from \"../main/Mainpage\";\n\nfunction Login() {\n\n    const signIn = e => {\n        let information = {\n            \"login\": username, \"password\": password\n        };\n        console.log(\"log in: \" + username + \" \" + password);\n        let body = [];\n        for (const inf in information) {\n            body.push(inf + \"=\" + information[inf]);\n        }\n        console.log(body);\n        body = \"?\" + body.join(\"&\");\n        fetch(\"/login\" + body, {\n            method: \"POST\"\n        }).then(response => response.json().then(json => {\n                if (response.ok) {\n                    console.log(\"no errors\");\n                } else {\n                    console.log(json.error);\n                }\n            }\n        ))\n    }\n\n    const signUp = e => {\n        let information = {\n            \"login\": username, \"password\": password\n        };\n        console.log(\"log in: \" + username + \" \" + password);\n        let body = [];\n        for (const inf in information) {\n            body.push(inf + \"=\" + information[inf]);\n        }\n        console.log(body);\n        body = \"?\" + body.join(\"&\");\n        fetch(\"/register\" + body, {\n            method: \"POST\"\n        }).then(response => response.text().then(text => {\n            console.log(response.statusText);\n            if (response.ok) {\n                return <Mainpage/>\n            } else {\n                return <Loginpage/>\n            }\n        }))\n    }\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    return (\n        <div className=\"login_form\">\n            <form>\n                <input type=\"text\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n                <input type=\"text\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n                <button type=\"button\" onClick={signUp}>я новенький</button>\n                <button type=\"button\" onClick={signIn}>я уже смешарик</button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default Login\n//TODO убрать лишние логи\n//TODO Primereact (я не знаю в чем проблема)","import React from \"react\";\nimport Login from \"./Login\";\nimport CoordinatesForm from \"../main/Form\";\n\nfunction Loginpage() {\n    return (<div>\n        <Login/>\n    </div>);\n}\n\nexport default Loginpage","import React from 'react';\r\nimport Heading from \"./components/Heading\";\r\nimport Loginpage from \"./components/login/Loginpage\";\r\nimport Mainpage from \"./components/main/Mainpage\";\r\n\r\nfunction App() {\r\n  return (<div className=\"firstPage\" style={{\r\n    backgroundImage: \"url(images/wallpaper.JPEG)\",//TODO Новогодние котики?\r\n    backgroundSize: \"45%\",\r\n    backgroundRepeat: \"repeat\"\r\n  }}><Heading/><br/>\r\n    <Loginpage/>\r\n  </div>)\r\n}\r\n\r\nexport default App;\r\n//TODO отображение нужной страницы в зависимости от состояния","import {createStore} from \"redux\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\")\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"change\":\r\n      localStorage.setItem(\"token\", action.value)\r\n      return {token: action.value};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst store = createStore(reducer, initialState);\r\n//todo\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
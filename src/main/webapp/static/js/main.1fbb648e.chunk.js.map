{"version":3,"sources":["components/Heading.js","app/store.js","components/login/Login.js","components/main/Form.js","components/login/Loginpage.js","components/main/Logout.js","components/main/Table.js","components/main/Graph.js","components/main/Mainpage.js","App.js","serviceWorker.js","index.js"],"names":["Heading","style","fontFamily","fontWeight","fontSize","textDecoration","color","backgroundColor","align","id","initialState","token","localStorage","getItem","store","createStore","state","action","type","setItem","value","login","Login","useState","username","setUsername","password","setPassword","className","onChange","e","target","onClick","information","body","inf","push","console","log","join","fetch","method","then","response","text","json","ok","alert","getLogin","dispatch","CoordinatesForm","props","x_form","onValueChange","setX","mode","min","max","minFractionDigits","maxFractionDigits","placeholder","y_form","setY","r_form","getState","validate","icon","Loginpage","Logout","Resulttable","checks","header","field","Graph","Mainpage","checkNumbers","q","a","b","setR","App","this","subscribe","setState","reduxState","backgroundImage","backgroundSize","backgroundRepeat","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oNAEe,SAASA,IAWpB,OACI,oBAAIC,MAVA,CACAC,WAAY,YACZC,WAAY,SACZC,SAAU,OACVC,eAAgB,qBAChBC,MAAO,UACPC,gBAAiB,WAICC,MAAM,SAASC,GAAG,UAAxC,8E,oBCZFC,EAAe,CACnBC,MAAOC,aAAaC,QAAQ,UAa9B,IAEeC,EAFDC,aAVd,SAAiBC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,SAEH,OADAN,aAAaO,QAAQ,QAASF,EAAOG,OAC9B,CAACC,MAAOJ,EAAOG,OACxB,QACE,OAAOJ,KAIsBN,G,gBCqDpBY,MA/Df,WAEI,IAFa,EA+CmBC,mBAAS,IA/C5B,mBA+CNC,EA/CM,KA+CIC,EA/CJ,OAgDmBF,mBAAS,IAhD5B,mBAgDNG,EAhDM,KAgDIC,EAhDJ,KAiDb,OACI,qBAAKC,UAAU,aAAf,SACI,iCACI,cAAC,YAAD,CAAWV,KAAK,OAAOT,GAAG,WAAWW,MAAOI,EAAUK,SAAU,SAACC,GAAD,OAAOL,EAAYK,EAAEC,OAAOX,UAC5F,cAAC,YAAD,CAAWF,KAAK,WAAWT,GAAG,WAAWW,MAAOM,EACrCG,SAAU,SAACC,GAAD,OAAOH,EAAYG,EAAEC,OAAOX,UACjD,cAAC,SAAD,CAAQF,KAAK,SAASc,QA7BnB,SAAAF,GACX,IAAIG,EAAc,CACd,MAAST,EAAU,SAAYE,GAE/BQ,EAAO,GACX,IAAK,IAAMC,KAAOF,EACdC,EAAKE,KAAKD,EAAM,IAAMF,EAAYE,IAEtCE,QAAQC,IAAIJ,GACZA,EAAO,IAAMA,EAAKK,KAAK,KACvBC,MAAM,YAAcN,EAAM,CACtBO,OAAQ,SACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,OAAOF,MAAK,SAAAG,GACjCF,EAASG,GACTC,MAAM,kHAENA,MAAM,gDAaN,2EACA,cAAC,SAAD,CAAQ7B,KAAK,SAASc,QAtDnB,SAAAF,GACX,IAAIG,EAAc,CACd,MAAST,EAAU,SAAYE,GAE/BQ,EAAO,GACX,IAAK,IAAMC,KAAOF,EACdC,EAAKE,KAAKD,EAAM,IAAMF,EAAYE,IAEtCE,QAAQC,IAAIJ,GACZA,EAAO,IAAMA,EAAKK,KAAK,KACvBC,MAAM,SAAWN,EAAM,CACnBO,OAAQ,SACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,OAAOF,MAAK,SAAAE,GAC7BD,EAASG,IACTC,MAAM,8EACNV,QAAQC,IAAIM,EAAKI,UACjBlC,EAAMmC,SAAS,CAAC/B,KAAM,SAAUE,MAAOwB,EAAKI,YAE5CD,MAAM,gDAoCV,8F,QChBDG,MAzCf,SAAyBC,GAuBrB,OACI,8BACI,uBAAM1C,GAAG,OAAT,UACI,cAAC,cAAD,CAAaW,MAAO+B,EAAMC,OAAQC,cAAe,SAACvB,GAAD,OAAOqB,EAAMG,KAAKxB,EAAEV,QAAQmC,KAAK,UACrEC,KAAM,EAAGC,IAAK,EACdC,kBAAmB,EAAGC,kBAAmB,EAAGC,YAAY,0DACrE,cAAC,cAAD,CAAaxC,MAAO+B,EAAMU,OAAQR,cAAe,SAACvB,GAAD,OAAOqB,EAAMW,KAAKhC,EAAEV,QAAQmC,KAAK,UACrEC,KAAM,EAAGC,IAAK,EACdC,kBAAmB,EAAGC,kBAAmB,EAAGC,YAAY,0DACrE,cAAC,cAAD,CAAaxC,MAAO+B,EAAMY,OAAQV,cAAe,SAACvB,GAAD,OAAOqB,EAAMW,KAAKhC,EAAEV,QAAQmC,KAAK,UACrEC,IAAK,EAAGC,IAAK,EACbC,kBAAmB,EAAGC,kBAAmB,EAAGC,YAAY,yDACrE,cAAC,SAAD,CAAQ1C,KAAK,SAASc,QAlCnB,WACX,IAAIC,EAAc,CACd,MAASnB,EAAMkD,WAAWrD,MAC1B,EAAKwC,EAAMC,OACX,EAAKD,EAAMU,OACX,EAAKV,EAAMY,QAEX7B,EAAO,GACX,IAAK,IAAMC,KAAOF,EACdC,EAAKE,KAAKD,EAAM,IAAMF,EAAYE,IAEtCE,QAAQC,IAAIJ,GACZA,EAAO,IAAMA,EAAKK,KAAK,KACnBY,EAAMc,YACNzB,MAAM,SAAWN,EAAM,CACnBO,OAAQ,SACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASE,OAAOH,MAAK,SAAAG,WAkBEqB,KAAK,aC9B7CC,MANf,WACI,OAAQ,8BACJ,cAAC,EAAD,OCMOC,MAVf,WAKI,OAAQ,8BACA,wBAAQlD,KAAK,SAASc,QALf,SAAAF,GAEXO,QAAQC,IAAI,qDAGR,uB,gBCOG+B,MAXf,SAAqBlB,GACjB,OACI,eAAC,YAAD,CAAW/B,MAAO+B,EAAMmB,OAAxB,UACI,cAAC,SAAD,CAAQC,OAAO,IAAIC,MAAM,MACzB,cAAC,SAAD,CAAQD,OAAO,IAAIC,MAAM,MACzB,cAAC,SAAD,CAAQD,OAAO,IAAIC,MAAM,MACzB,cAAC,SAAD,CAAQD,OAAO,eAAeC,MAAM,eCAjCC,MARf,SAAetB,GACX,OACI,kJCsBOuB,MApBf,WACI,IAAMC,EAAe,SAACC,EAAGC,EAAGC,GACxB,OAASF,EAAIC,GAAOD,EAAIE,GAFZ,EAOOvD,mBAAS,KAPhB,mBAOT6B,EAPS,KAODE,EAPC,OAQO/B,mBAAS,KARhB,mBAQTsC,EARS,KAQDC,EARC,OASOvC,mBAAS,KAThB,mBASTwC,EATS,KASDgB,EATC,OAUYxD,mBAAS,MAVrB,mBAUT+C,EAVS,KAWhB,OAXgB,KAWR,gCACJ,cAAC,EAAD,IACA,cAAC,EAAD,CAAiBL,SATJ,WACb,OAAQU,EAAavB,GAAS,EAAG,IAAMuB,EAAad,GAAS,EAAG,IAAMc,EAAaZ,EAAQ,EAAG,IAQzDX,OAAQA,EAAQS,OAAQA,EAAQE,OAAQA,EAAQT,KAAMA,EAAMQ,KAAMA,EACtFiB,KAAMA,IACvB,cAAC,EAAD,CAAaT,OAAQA,IACrB,cAAC,EAAD,QCCOU,E,kLAjBQ,IAAD,OAClBC,KAAK9B,MAAMrC,MAAMoE,WAAU,WACzB,EAAKC,SAAS,CAACC,WAAY,EAAKjC,MAAMrC,MAAMkD,kB,+BAK9C,OAAQ,sBAAKpC,UAAU,YAAY3B,MAAO,CACxCoF,gBAAiB,6BACjBC,eAAgB,MAChBC,iBAAkB,UAHZ,UAIL,cAACvF,EAAD,IAAU,uBAC2B,MAArCiF,KAAK9B,MAAMrC,MAAMkD,WAAWrD,MAAgB,cAAC,EAAD,IAAe,cAAC,EAAD,W,GAbhD6E,a,MCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,CAAKlF,MAAOA,MAEhBmF,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3D,MAAK,SAAA4D,GACjCA,EAAaC,kB","file":"static/js/main.1fbb648e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Heading() {\n    const styles = {\n        h2: {\n            fontFamily: \"monospace\",\n            fontWeight: \"bolder\",\n            fontSize: \"250%\",\n            textDecoration: \"underline overline\",\n            color: \"#A35CFF\",\n            backgroundColor: \"#F3FFE1\"\n        }\n    }\n    return (\n        <h2 style={styles.h2} align=\"center\" id=\"authors\">Mike Lavlinskiy and Olga Ilinskaya production, var. 67125, P3214</h2>\n    )\n}","import {createStore} from \"redux\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"login\")\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"change\":\r\n      localStorage.setItem(\"login\", action.value)\r\n      return {login: action.value};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst store = createStore(reducer, initialState);\r\n//todo\r\nexport default store;\r\n","\nimport React, {useState} from \"react\";\nimport store from \"../../app/store\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Button} from \"primereact/button\";\n\nfunction Login() {\n\n    const signIn = e => {\n        let information = {\n            \"login\": username, \"password\": password\n        };\n        let body = [];\n        for (const inf in information) {\n            body.push(inf + \"=\" + information[inf]);\n        }\n        console.log(body);\n        body = \"?\" + body.join(\"&\");\n        fetch(\"/login\" + body, {\n            method: \"POST\"\n        }).then(response => response.text().then(text => {\n                if (response.ok) {\n                    alert(\"Удачный логин!\")\n                    console.log(text.getLogin)\n                    store.dispatch({type: \"change\", value: text.getLogin});\n                } else {\n                    alert(\"Ошибка!\")\n                }\n            }\n        ))\n    }\n\n    const signUp = e => {\n        let information = {\n            \"login\": username, \"password\": password\n        };\n        let body = [];\n        for (const inf in information) {\n            body.push(inf + \"=\" + information[inf]);\n        }\n        console.log(body);\n        body = \"?\" + body.join(\"&\");\n        fetch(\"/register\" + body, {\n            method: \"POST\"\n        }).then(response => response.text().then(json => {\n            if (response.ok) {\n                alert(\"Удачная регистрация!\")\n            } else {\n                alert(\"Ошибка!\")\n            }\n        }))\n    }\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    return (\n        <div className=\"login_form\">\n            <form>\n                <InputText type=\"text\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n                <InputText type=\"password\" id=\"password\" value={password}\n                           onChange={(e) => setPassword(e.target.value)}/>\n                <Button type=\"button\" onClick={signUp}>я новенький</Button>\n                <Button type=\"button\" onClick={signIn}>я уже смешарик</Button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default Login\n//TODO Нормально обработать ответы от сервера(везде)","import React from \"react\";\nimport {InputNumber} from 'primereact/inputnumber';\nimport {Button} from \"primereact/button\";\nimport store from \"../../app/store\";\n\nfunction CoordinatesForm(props) {\n    const submit = () => {\n        let information = {\n            \"token\": store.getState().token,\n            \"x\": props.x_form,\n            \"y\": props.y_form,\n            \"r\": props.r_form\n        };\n        let body = [];\n        for (const inf in information) {\n            body.push(inf + \"=\" + information[inf]);\n        }\n        console.log(body);\n        body = \"?\" + body.join(\"&\");\n        if (props.validate()) {\n            fetch(\"/point\" + body, {\n                method: \"POST\"\n            }).then(response => response.json().then(json => {\n//TODO\n            }))\n        }\n    }\n\n    return (\n        <div>\n            <form id=\"form\">\n                <InputNumber value={props.x_form} onValueChange={(e) => props.setX(e.value)} mode=\"decimal\"\n                             min={-3} max={3}\n                             minFractionDigits={1} maxFractionDigits={5} placeholder=\"Введите X(-3 .. 3)\"/>\n                <InputNumber value={props.y_form} onValueChange={(e) => props.setY(e.value)} mode=\"decimal\"\n                             min={-3} max={3}\n                             minFractionDigits={1} maxFractionDigits={5} placeholder=\"Введите Y(-3 .. 3)\"/>\n                <InputNumber value={props.r_form} onValueChange={(e) => props.setY(e.value)} mode=\"decimal\"\n                             min={0} max={3}\n                             minFractionDigits={1} maxFractionDigits={5} placeholder=\"Введите R(0 .. 3)\"/>\n                <Button type=\"button\" onClick={submit} icon=\"pi\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default CoordinatesForm","import React from \"react\";\nimport Login from \"./Login\";\nimport CoordinatesForm from \"../main/Form\";\n\nfunction Loginpage() {\n    return (<div>\n        <Login/>\n    </div>);\n}\n\nexport default Loginpage","import React from \"react\";\n\nfunction Logout() {\n    const logout = e => {\n        //TODO\n        console.log(\"бабалити\");\n    }\n    return (<div>\n            <button type=\"button\" onClick={logout}>logout</button>\n        </div>\n    )\n}\nexport default Logout","import React from \"react\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\n\nfunction Resulttable(props) {\n    return (\n        <DataTable value={props.checks}>\n            <Column header=\"X\" field=\"x\"/>\n            <Column header=\"Y\" field=\"y\"/>\n            <Column header=\"R\" field=\"y\"/>\n            <Column header=\"Hit or miss?\" field=\"result\"/>\n        </DataTable>\n    )\n}\n\nexport default Resulttable;","import React from \"react\";\n\nfunction Graph(props) {\n    return (\n        <div>\n            ну это кароче канвас =)))\n        </div>\n    )\n}\n\nexport default Graph;","import React, {useState} from \"react\";\nimport Logout from \"./Logout\";\nimport CoordinatesForm from \"./Form\";\nimport Resulttable from \"./Table\";\nimport Graph from \"./Graph\";\n\nfunction Mainpage() {\n    const checkNumbers = (q, a, b) => {\n        return ((q > a) && (q < b));\n    }\n    const validate = () => {\n        return (checkNumbers(x_form, -3, 3) && checkNumbers(y_form, -3, 3) && checkNumbers(r_form, 0, 3));\n    }\n    const [x_form, setX] = useState('0');\n    const [y_form, setY] = useState('0');\n    const [r_form, setR] = useState('1');\n    const [checks, setChecks] = useState(null);\n    return (<div>\n        <Logout/>\n        <CoordinatesForm validate={validate} x_form={x_form} y_form={y_form} r_form={r_form} setX={setX} setY={setY}\n                         setR={setR}/>\n        <Resulttable checks={checks}/>\n        <Graph/>\n    </div>)\n}\n\nexport default Mainpage","import React, {Component} from 'react';\r\nimport Heading from \"./components/Heading\";\r\nimport Loginpage from \"./components/login/Loginpage\";\r\nimport Mainpage from \"./components/main/Mainpage\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.store.subscribe(() => {\r\n      this.setState({reduxState: this.props.store.getState()});\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (<div className=\"firstPage\" style={{\r\n      backgroundImage: \"url(images/wallpaper.JPEG)\",//TODO Новогодние котики?\r\n      backgroundSize: \"45%\",\r\n      backgroundRepeat: \"repeat\"\r\n    }}><Heading/><br/>\r\n      {this.props.store.getState().token == null ? <Loginpage/> : <Mainpage/>}\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App store={store}/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}